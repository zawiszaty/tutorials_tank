server {
	server_name tutorials-tank.pl tutorials-tank.pl;

	listen 443 ssl; # managed by Certbot
	ssl_certificate /etc/letsencrypt/live/tutorials-tank.pl/fullchain.pem; # managed by Certbot
	ssl_certificate_key /etc/letsencrypt/live/tutorials-tank.pl/privkey.pem; # managed by Certbot
	include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
    
    root /var/www/project/public;
    
    location /the_socket/message{
    # Path rewriting
    rewrite /the_socket/message/(.*) /$1 break;
    proxy_redirect off;

    # switch off logging
    access_log off;

    # redirect all HTTP traffic to localhost
    proxy_pass http://workers_2:8123/;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # WebSocket support (nginx 1.4)
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    # timeout extension, possibly keep this short if using a ping strat.
    proxy_read_timeout 300s;
    }

location /the_socket/notification{
    # Path rewriting
    rewrite /the_socket/notification/(.*) /$1 break;
    proxy_redirect off;

    # switch off logging
    access_log off;

    # redirect all HTTP traffic to localhost
    proxy_pass http://workers_3:8888/;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # WebSocket support (nginx 1.4)
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    # timeout extension, possibly keep this short if using a ping strat.
    proxy_read_timeout 300s;
    }

    location /api {
        # try to serve file directly, fallback to index.php
        try_files $uri /index.php$is_args$args;
    }

    location /oauth {
        # try to serve file directly, fallback to index.php
        try_files $uri /index.php$is_args$args;
    }

    location /avatars {
        # try to serve file directly, fallback to index.php
        try_files $uri /index.php$is_args$args;
    }

    location /thumbnails {
        # try to serve file directly, fallback to index.php
        try_files $uri /index.php$is_args$args;
    }

    location /bundles {
        # try to serve file directly, fallback to index.php
        try_files $uri /index.php$is_args$args;
    }

    location ~ ^/index\.php(/|$) {
          fastcgi_pass php:9000;
          fastcgi_split_path_info ^(.+\.php)(/.*)$;
          include fastcgi_params;

          # optionally set the value of the environment variables used in the application
          # fastcgi_param APP_ENV prod;
          # fastcgi_param APP_SECRET <app-secret-id>;
          # fastcgi_param DATABASE_URL "mysql://db_user:db_pass@host:3306/db_name";

          # When you are using symlinks to link the document root to the
          # current version of your application, you should pass the real
          # application path instead of the path to the symlink to PHP
          # FPM.
          # Otherwise, PHP's OPcache may not properly detect changes to
          # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
          # for more information).
          fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
          fastcgi_param DOCUMENT_ROOT $realpath_root;
          # Prevents URIs that include the front controller. This will 404:
          # http://domain.tld/index.php/some-path
          # Remove the internal directive to allow URIs like this
          internal;
      }

    location / {
        proxy_pass http://frontend:3000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;

    }

    error_log /var/log/nginx/project_error.log;
    access_log /var/log/nginx/project_access.log;
}
server {
	if ($host = www.tutorials-tank.pl) {
		return 301 https://$host$request_uri;
	} # managed by Certbot

	if ($host = tutorials-tank.pl) {
		return 301 https://$host$request_uri;
	} # managed by Certbot

	listen 80 default_server;
	listen [::]:80 default_server;

	server_name tutorials-tank.pl www.tutorials-tank.pl;
	return 404; # managed by Certbot
}