# Use root/example as user/password credentials
version: '3.1'

services:
  rabbit:
    image: "rabbitmq:3.7.8"
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: "admin"
      RABBITMQ_DEFAULT_PASS: "admin"
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - "5672:5672"
    labels:
      NAME: "rabbitmq"

  nginx:
    image: nginx:1.11-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./symfony:/var/www/project
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - letsencrypt_certs:/etc/letsencrypt
      - letsencrypt_www:/var/www/letsencrypt
    links:
      - db
      - php
      - frontend


  php:
    image: zawiszaty/tutorials_tank_php:2.0.0
    working_dir: /var/www/project
    volumes:
      - ./symfony:/var/www/project
    links:
      - db

  frontend:
    image: zawiszaty/tutorials_tank_node:3.0.0
    ports:
      - 3000:3000
    volumes:
      - ./web-app:/usr/src/app
    command: ['npm','run','build']

  workers_1:
    image: zawiszaty/tutorials_tank_php:2.0.0
    restart: always
    working_dir: /var/www/project
    volumes:
      - ./symfony:/var/www/project
    command: ['php','bin/console', 'rabbitmq:multiple-consumer', 'events']


  workers_2:
    image: zawiszaty/tutorials_tank_php:2.0.0
    working_dir: /var/www/project
    volumes:
      - ./symfony:/var/www/project
    command: ['php','bin/console', 'app:create-message-server']
    ports:
      - "8123:8123"

  workers_3:
    image: zawiszaty/tutorials_tank_php:2.0.0
    working_dir: /var/www/project
    volumes:
      - ./symfony:/var/www/project
    command: ['php','bin/console', 'app:create-notification-server']
    ports:
      - "8888:8888"
      - "5555:5555"

  db:
    image: mysql:5.7.16
    environment:
      MYSQL_ROOT_PASSWORD: admin
    volumes:
      - db_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    ports:
      - 3307:3307

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.4.2
    ports:
      - 9200:9200
    environment:
      - "discovery.type=single-node"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata1:/usr/share/elasticsearch/data

  letsencrypt:
    build: ./certbot
    command: /bin/true
    volumes:
      - letsencrypt_certs:/etc/letsencrypt
      - letsencrypt_www:/var/www/letsencrypt


volumes:
  php:
  db_data:
  esdata1:
  letsencrypt_certs:
  letsencrypt_www:
